version: '3.8'

services:
  # Backend API
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: music-education-scheduler-api
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/music_education_scheduler?schema=public
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=development_jwt_secret
      - JWT_EXPIRES_IN=24h
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - app-network

  # Frontend React App
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: music-education-scheduler-client
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: music-education-scheduler-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=music_education_scheduler
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  # Redis for Caching
  redis:
    image: redis:alpine
    container_name: music-education-scheduler-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - app-network

  # pgAdmin for Database Management (optional)
  pgadmin:
    image: dpage/pgadmin4
    container_name: music-education-scheduler-pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  pgadmin-data: